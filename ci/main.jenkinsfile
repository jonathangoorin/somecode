node(){

    properties([
     disableConcurrentBuilds(),
     parameters([
        choice(name: 'DCMAKE_BUILD_TYPE', choices: 'Release\nDebug\nRelWithDebInfo\nMinSizeRel', description: 'Please specify the build type'),
        choice(name: 'DBUILD_CORE_SHARED', choices: 'ON\nOFF', description: 'Build core as shared library'),
        choice(name: 'DBUILD_EXAMPLES', choices: 'OFF\nON', description: 'BUILD_EXAMPLES'),
        choice(name: 'DBUILD_TESTS', choices: 'OFF\nON', description: 'BUILD_TESTS'),
        choice(name: 'DBUILD_CLI', choices: 'OFF\nON', description: 'DBUILD_CLI')
     ])
   ])



    def targetList = ["linux64", "linux86", "winx86", "win64"]
    def linuxJobName = "DMS-Core-PullRequest-linux"
    def windowsJobName = "DMS-Core-PullRequest-windows"

    stage("Start Builds"){
        for(target in targetList){

            if(target.startsWith("linux")){

                pipelineJob(linuxJobName) {
                    definition {
                        cps {
                            script(readFileFromWorkspace('ci/linux.jenkinsfile'))
                            sandbox()     
                        }
                    }
                }
            }

            if(target.startsWith("win")){
                echo "here will be windows job"
            }
        }
    }
}